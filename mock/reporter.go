// Code generated by MockGen. DO NOT EDIT.
// Source: lmwn-assignment-go/src (interfaces: Reporter)

// Package mock is a generated GoMock package.
package mock

import (
	src "lmwn-assignment-go/src"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// GetCovidReport mocks base method.
func (m *MockReporter) GetCovidReport() ([]*src.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCovidReport")
	ret0, _ := ret[0].([]*src.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCovidReport indicates an expected call of GetCovidReport.
func (mr *MockReporterMockRecorder) GetCovidReport() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCovidReport", reflect.TypeOf((*MockReporter)(nil).GetCovidReport))
}
